#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        double_quotation {
            bindings = <&kp AT>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        text_p: to_layer_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N &kp Q &kp LS(A) &kp LS(J) &kp U &kp N6 &kp N8 &kp Q>;
            label = "TO_LAYER_0";
        };

        gmail: gmail {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LEFT_BRACKET &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
            label = "GMAIL";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&text_p>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                  &kp W         &kp E         &kp R           &kp T                                                 &kp Y        &kp U  &lt 6 I  &kp O  &kp P
&kp A                  &kp S         &kp D         &kp F           &kp G        &kp LS(LG(ESCAPE))      &kp MINUS        &kp H        &kp J  &kp K    &kp L  &kp BACKSPACE
&mt LEFT_SHIFT PERIOD  &kp Z         &kp X         &kp C           &kp V        &kp TAB                 &kp LS(MINUS)    &kp B        &kp N  &kp M    &kp P  &kp ENTER
&mt LCTRL COMMA        &kp LEFT_ALT  &kp LEFT_WIN  &kp LANGUAGE_5  &lt 3 SPACE  &kp AT                  &lt 2 BACKSPACE  &lt 1 ENTER                         &kp PRINTSCREEN
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PAGE_UP>;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                           &kp N7        &kp N8        &kp N9        &kp LS(EQUAL)  &kp MINUS
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &kp COLON   &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp LS(N8)     &kp SLASH
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &kp PERIOD  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp N0         &mt RIGHT_SHIFT ENTER
&trans          &trans                  &trans          &trans                   &trans   &trans      &kp LG(L)   &trans                                                   &kp EQUAL
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_DOWN) LC(PAGE_UP)>;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &kp F7   &kp F8  &kp F9  &kp F12  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp F4   &kp F5  &kp F6  &kp F11  &kp DELETE
&trans  &trans  &trans  &trans  &trans  &trans      &gmail  &kp F1   &kp F2  &kp F3  &kp F10  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &text_p                           &trans
            >;
        };

        NUM {
            bindings = <
&kp MINUS                   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS                                                  &kp CARET          &kp AMPERSAND     &kp LS(GRAVE)          &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp SLASH                   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))      &kp LS(MINUS)  &kp EXCLAMATION    &kp LEFT_BRACKET  &kp HASH               &kp DOLLAR            &kp PERCENT
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD    &kp EQUAL                    &trans         &kp RIGHT_BRACKET  &kp BACKSLASH     &kp LS(RIGHT_BRACKET)  &kp LS(BACKSLASH)     &kp NUBS
&trans                      &trans           &trans           &trans           &trans        &trans                       &trans         &trans                                                                            &kp LS(NUBS)
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                 &trans      &trans    &trans    &trans       &trans
&trans  &trans  &trans  &trans  &trans  &trans      &kp C_VOLUME_UP    &trans      &mkp MB1  &mkp MB3  &lt 5 SPACE  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &kp C_VOLUME_DOWN  &mkp MB4    &mkp MB5  &mkp MB1  &mkp MB2     &mkp MB2
&trans  &trans  &trans  &trans  &trans  &trans      &mkp MB2           &kp K_MUTE                                   &kp RC(C)
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PAGE_UP>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
